{"version":3,"sources":["ui/SnackBar.tsx","firebase.ts","ui/Button.tsx","pages/Identification.tsx","ui/Ball.tsx","pages/MoneyInputDialog.tsx","pages/Play.tsx","pages/LocalStatRow.tsx","pages/Stats.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["React","Consumer","Provider","SnackBar","react","_ref","open","close","message","classNames","isOpen","push","className","join","onClick","SnackBarProvider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","setTimeout","state","value","SnackBar_SnackBar","children","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","db","users","ref","games","data","app","initializeApp","database","on","snapshot","val","username","once","console","log","newUser","history","newUsers","set","game","localStorage","getItem","gamesSnapshot","usersSnapshot","user","find","u","concat","toConsumableArray","length","newGames","Button","isLoading","secondary","disabled","style","src","alt","EnterKey","onExistingUserClick","asyncToGenerator","regenerator_default","a","mark","_callee","snackbar","wrap","_context","prev","next","isListOfUsersVisible","stop","_x","apply","arguments","onNewUserClick","isAddNewUserVisible","onUsernameChange","event","target","onAddNewUser","_callee2","_context2","isAddingNewUserLoading","abrupt","firebase","addNewUser","onDone","goBackToMainScreen","onUserPick","chosenUsername","onUserAccept","isListOfUsersLoading","ss","_this2","isMainMenuVisible","ctx","Button_Button","map","_ref3","key","name","type","onChange","modulos","Ball","modulo","number","marked","MoneyInputDialog","onAccept","money","onCancel","setMoney","index","valueAsNumber","slice","numbers","Array","from","_","colSpan","numbersIndex","areAllMarked","numberIndex","isMarked","_ref2","slicedToArray","b","defaultValue","onInput","isAcceptLoading","getSixNumbers","min","max","i","random","Math","floor","includes","sort","changeCount","count","isCountMenuOpen","generateNumbers","openSubmenu","isSubmenuOpen","closeSubmenu","toggleCountMenu","acceptMoney","_ref4","_loop","_i","moneyGain","correct","filter","j","_ref5","_ref6","moneyLost","ticket","date","Date","toString","saveGame","logOut","clear","location","reload","isNewCombinationsDisabled","rowIndex","findIndex","pair","newMarked","row","_ref7","_ref8","Ball_Ball","toggleNumberMark","flex","hidden","onStatsTab","MoneyInputDialog_MoneyInputDialog","LocalStatRow","n","_isMounted","shouldSetStateAfterMounted","globalStats","localStats","compute","myGames","hisGames","totalGain","totalLoss","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","err","return","stat","total","totalClassNames","LocalStatRow_LocalStatRow","onPlayTab","App","onIdDone","setItem","page","goToPlayTab","goToStatsTab","react_default","createElement","SnackBar_SnackBarProvider","Identification_EnterKey","Play_EnterKey","Stats_EnterKey","Component","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0VAiB+BA,gBAAyB,KAAhDC,aAAUC,aAEZC,mLAEF,OACEC,EAAA,cAACH,EAAD,KAEI,SAAAI,GAAsCA,EAAnCC,KAAmC,IAA7BC,EAA6BF,EAA7BE,MAAOC,EAAsBH,EAAtBG,QACRC,EAAa,CAAC,YAEpB,OAHoCJ,EAAbK,QAEXD,EAAWE,KAAK,UAE1BP,EAAA,qBAAKQ,UAAWH,EAAWI,KAAK,KAAMC,QAASP,GAC7CH,EAAA,mBAAGQ,UAAU,WAAWJ,aAVjBR,aAoBjBe,cAEJ,SAAAA,EAAaC,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACzBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOAV,KAAO,SAACE,GACdS,EAAKO,SAAS,CACZd,QAAQ,EACRF,YAEFiB,WAAW,WACTR,EAAKV,SACJ,MAfsBU,EAkBnBV,MAAQ,WACdU,EAAKO,SAAS,CACZd,QAAQ,KAlBVO,EAAKS,MAAQ,CACXlB,QAAS,IACTE,QAAQ,GAJeO,wEAyBzB,OACEb,EAAA,cAACF,EAAD,CACEyB,MAAO,CACLrB,KAAMc,KAAKd,KACXC,MAAOa,KAAKb,MACZG,OAAQU,KAAKM,MAAMhB,OACnBF,QAASY,KAAKM,MAAMlB,UAGtBJ,EAAA,cAACwB,EAAD,MACCR,KAAKJ,MAAMa,iBArCW7B,6DClCzB8B,UAAS,CACbC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,iBAqBAC,aASnB,SAAAA,IAAc,IAAApB,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,GAAAjB,KAPNkB,QAOM,EAAAlB,KALPmB,MAAQ,kBAAMtB,EAAKqB,GAAGE,IAAI,UAKnBpB,KAJPqB,MAAQ,kBAAMxB,EAAKqB,GAAGE,IAAI,UAInBpB,KAFPsB,UAEO,EACZC,IAAIC,cAAcd,GAClBV,KAAKkB,GAAKK,IAAIE,WAEdzB,KAAKkB,GAAGE,IAAI,KAAKM,GAAG,QAAS,SAAAC,GACX,MAAZA,IACJ9B,EAAKyB,KAAOK,EAASC,wGAIAC,+FACA7B,KAAKkB,GAAGE,IAAI,UAAUU,KAAK,gBAA5CH,SACAR,EAAQQ,EAASC,OAAS,GAChCG,QAAQC,IAAI,SAENC,EAAgB,CACpBJ,WACAK,QAAS,IAELC,wBAAehB,IAAOc,IAE5BjC,KAAKkB,GAAGE,IAAI,UAAUgB,IAAID,+KAGLE,4FAEL,OADZR,EAAWS,aAAaC,QAAQ,eAElCV,EAAW,oBAGe7B,KAAKkB,GAAGE,IAAI,UAAUU,KAAK,uBAAjDU,SACAnB,EAAgBmB,EAAcZ,OAAS,YAEjB5B,KAAKkB,GAAGE,IAAI,UAAUU,KAAK,gBAAjDW,SACAtB,EAAgBsB,EAAcb,OAAS,GAC7CG,QAAQC,IAAIb,IAENuB,EAAOvB,EAAMwB,KAAK,SAAAC,GAAC,OAAIA,EAAEf,UAAYA,KACrCK,QAAN,GAAAW,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAoB4C,EAAMR,SAAW,IAArC,CAAyCb,EAAM0B,SAEzCC,wBAAe3B,IAAOgB,IAC5BrC,KAAKkB,GAAGE,IAAI,UAAUgB,IAAIY,GAC1BhD,KAAKkB,GAAGE,IAAI,UAAUgB,IAAIjB,gHCvET8B,4NAEnBvD,QAAU,WACkB,MAAtBG,EAAKD,MAAMF,SACbG,EAAKD,MAAMF,mFAKb,IAAML,EAAa,CAAC,UAIpB,OAHIW,KAAKJ,MAAMsD,WAAW7D,EAAWE,KAAK,oBACtCS,KAAKJ,MAAMuD,WAAW9D,EAAWE,KAAK,oBAGxCP,EAAA,wBACEQ,UAAWH,EAAWI,KAAK,KAC3BC,QAASM,KAAKN,QACd0D,SAAUpD,KAAKJ,MAAMwD,SACrBC,MAAOrD,KAAKJ,MAAMyD,OAElBrE,EAAA,sBAAMQ,UAAU,kBACbQ,KAAKJ,MAAMa,UAEdzB,EAAA,sBAAMQ,UAAU,kBACdR,EAAA,qBAAKsE,IAAI,gBAAgBC,IAAI,cAxBH3E,cCaf4E,cAEnB,SAAAA,EAAa5D,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACzB3D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,KAAAH,KAAMJ,KAkBA6D,oBAnBmB,eAAAxE,EAAAa,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAmBG,SAAAC,EAAOC,GAAP,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC5BtE,EAAKO,SAAS,CACZgE,sBAAsB,IAFI,wBAAAH,EAAAI,SAAAP,MAnBH,gBAAAQ,GAAA,OAAArF,EAAAsF,MAAAvE,KAAAwE,YAAA,GAAA3E,EAyBnB4E,eAAiB,WACvB5E,EAAKO,SAAS,CACZsE,qBAAqB,KA3BE7E,EA+BnB8E,iBAAmB,SAACC,GAC1B,IACMrE,EADSqE,EAAMC,OACAtE,MACrBV,EAAKO,SAAS,CACZyB,SAAUtB,KAnCaV,EAuCnBiF,aAvCmBhF,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAuCJ,SAAAkB,IAAA,OAAApB,EAAAC,EAAAI,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WACjBtE,EAAKS,MAAM2E,uBADM,CAAAD,EAAAb,KAAA,eAAAa,EAAAE,OAAA,wBAErBrF,EAAKO,SAAS,CACZ6E,wBAAwB,IAHLD,EAAAb,KAAA,EAKftE,EAAKD,MAAMuF,SAASC,WAAWvF,EAAKS,MAAMuB,UAL3B,OAMrBhC,EAAKO,SAAS,CACZ6E,wBAAwB,IAE1BpF,EAAKD,MAAMyF,OAAOxF,EAAKS,MAAMuB,UATR,wBAAAmD,EAAAX,SAAAU,MAvCIlF,EAmDnByF,mBAAqB,WACvBzF,EAAKS,MAAM2E,wBACfpF,EAAKO,SAAS,CACZsE,qBAAqB,EACrBN,sBAAsB,KAvDCvE,EA2DnB0F,WAAa,SAAC1D,GACpBhC,EAAKO,SAAS,CACZoF,eAAgB3D,KA7DOhC,EAiEnB4F,aAAe,WACrB5F,EAAKD,MAAMyF,OAAOxF,EAAKS,MAAMkF,iBAhE7B3F,EAAKS,MAAQ,CACX8D,sBAAsB,EACtBM,qBAAqB,EACrBgB,sBAAsB,EACtBT,wBAAwB,EACxBO,eAAgB,KAChB3D,SAAU,GACVV,MAAO,IAGTtB,EAAKD,MAAMuF,SAAShE,QAAQO,GAAG,QAAS,SAAAiE,GACtC,GAAU,MAANA,EAAJ,CACA,IAAMxE,EAAQwE,EAAG/D,OAAS,GAC1B/B,EAAKO,SAAS,CAAEe,aAfOtB,wEAqEjB,IAAA+F,EAAA5F,KACF6F,GAAqB7F,KAAKM,MAAM8D,uBAAyBpE,KAAKM,MAAMoE,oBAE1E,OACE1F,EAAA,cAACH,EAAD,KAEI,SAACiH,GAAD,OACE9G,EAAA,qBAAKQ,UAAU,uBAGXqG,GACA7G,EAAA,qBAAKQ,UAAU,gBACbR,EAAA,2CAEAA,EAAA,cAAC+G,EAAD,CACE7C,UAAW0C,EAAKtF,MAAMoF,qBACtBhG,QAAS,kBAAMkG,EAAKnC,oBAAoBqC,KAF1C,6BAOA9G,EAAA,cAAC+G,EAAD,CAAQrG,QAASkG,EAAKnB,gBAAtB,4CAKFmB,EAAKtF,MAAM8D,sBACXpF,EAAA,qBAAKQ,UAAU,uBACbR,EAAA,wCAGE4G,EAAKtF,MAAMa,MAAM6E,IAAI,SAAAC,GAAkB,IAAfpE,EAAeoE,EAAfpE,SAChBxC,EAAa,CAAC,SAEpB,OADIwC,GAAY+D,EAAKtF,MAAMkF,gBAAgBnG,EAAWE,KAAK,YAEzDP,EAAA,uBAAOQ,UAAWH,EAAWI,KAAK,KAAMyG,IAAKrE,GAC3C7C,EAAA,uBAAOmH,KAAK,OAAOC,KAAK,QAAQC,SAAU,kBAAMT,EAAKL,WAAW1D,MAChE7C,EAAA,0BAAQ6C,MAMhB7C,EAAA,qBAAKQ,UAAU,WACbR,EAAA,cAAC+G,EAAD,CACErG,QAASkG,EAAKN,oBADhB,SAKAtG,EAAA,cAAC+G,EAAD,CACE3C,SAAuC,MAA7BwC,EAAKtF,MAAMkF,eACrBtC,WAAW,EACXxD,QAASkG,EAAKH,cAHhB,WAaJG,EAAKtF,MAAMoE,qBACX1F,EAAA,qBAAKQ,UAAU,sBACbR,EAAA,qCAEAA,EAAA,uBAAOoH,KAAK,OAAOC,SAAUT,EAAKjB,iBAAkBpE,MAAOqF,EAAKtF,MAAMuB,WAEtE7C,EAAA,qBAAKQ,UAAU,WACbR,EAAA,cAAC+G,EAAD,CAAQrG,QAASkG,EAAKN,oBAAtB,SACAtG,EAAA,cAAC+G,EAAD,CACErG,QAASkG,EAAKd,aACd1B,SAAwC,GAA9BwC,EAAKtF,MAAMuB,SAASkB,OAC9BG,UAAW0C,EAAKtF,MAAM2E,wBAHxB,qBA7IkBrG,qBCfhC0H,iBAAU,CACd,MACA,QACA,OACA,SACA,QACA,SACA,SACA,SAGmBC,6MAEX7G,QAAU,WACU,MAAtBG,EAAKD,MAAMF,SACfG,EAAKD,MAAMF,mFAIX,IAAM8G,EAASxG,KAAKJ,MAAM6G,OAAS,EAG7BpH,EAAa,CAAC,OAFNiH,EAAQE,IAKtB,OAFIxG,KAAKJ,MAAM8G,QAAQrH,EAAWE,KAAK,UAGrCP,EAAA,qBAAKQ,UAAWH,EAAWI,KAAK,KAC3BC,QAASM,KAAKN,SAEfM,KAAKJ,MAAM6G,eAlBa7H,aCJb+H,sBAEnB,SAAAA,EAAoB/G,GAAc,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IAChC9G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6G,GAAAxG,KAAAH,KAAMJ,KAOAgH,SAAW,WACU,MAAvB/G,EAAKD,MAAMgH,UACf/G,EAAKD,MAAMgH,SAAS/G,EAAKS,MAAMuG,QAVChH,EAa1BiH,SAAW,WACU,MAAvBjH,EAAKD,MAAMkH,UACfjH,EAAKD,MAAMkH,YAfqBjH,EAkB1BkH,SAAW,SAACC,EAAepC,GACjC,IACMrE,EADSqE,EAAMC,OACAoC,cACfJ,EAAK,GAAAhE,OAAA/C,OAAAgD,EAAA,EAAAhD,CACND,EAAKS,MAAMuG,MAAMK,MAAM,EAAGF,IADpB,CAETzG,GAFST,OAAAgD,EAAA,EAAAhD,CAGND,EAAKS,MAAMuG,MAAMK,MAAMF,EAAQ,KAEpCnH,EAAKO,SAAS,CAAEyG,WAxBhB,IAAM9D,EAASnD,EAAMuH,QAAQpE,OAFG,OAGhClD,EAAKS,MAAQ,CACXuG,MAAOO,MAAMC,KAAK,CAAEtE,WAAUiD,IAAI,SAAAsB,GAAC,OAAI,KAJTzH,wEA6BjB,IAAA+F,EAAA5F,KACf,OACEhB,EAAA,qBAAKQ,UAAU,kBACbR,EAAA,qBAAKQ,UAAU,2BAEbR,EAAA,2BACEA,EAAA,2BACAA,EAAA,wBACEA,EAAA,oBAAIuI,QAAS,GAAb,eACAvI,EAAA,+BACAA,EAAA,+BAGAgB,KAAKJ,MAAMuH,QAAQnB,IAAI,SAACmB,EAASK,GAC/B,IAAIC,GAAe,EAEnB,OACEzI,EAAA,oBAAIkH,IAAKsB,GAELL,EAAQnB,IAAI,SAACS,EAAQiB,GACnB,IAAMC,EAEA,MAFW/B,EAAKhG,MAAM8G,OAAO/D,KAAK,SAAA1D,GAAY,IAAA2I,EAAA9H,OAAA+H,EAAA,EAAA/H,CAAAb,EAAA,GAAV2E,EAAUgE,EAAA,GAAPE,EAAOF,EAAA,GAClD,OAAOhE,GAAK4D,GAAgBM,GAAKJ,IAE9BC,IAAUF,GAAe,GAC9B,IAAMpI,EAAa,GAEnB,OADIsI,GAAUtI,EAAWE,KAAK,UAE5BP,EAAA,oBAAIkH,IAAKwB,EAAalI,UAAWH,EAAWI,KAAK,MAC9CgH,KAKTzH,EAAA,wBACEA,EAAA,uBAAOoH,KAAK,SAAS2B,aAAc,QAErC/I,EAAA,wBACEA,EAAA,uBACEoH,KAAK,SACL2B,aAAcN,EAAe,GAAK,IAClCO,QAAS,SAAApD,GAAK,OAAIgB,EAAKmB,SAASS,EAAc5C,YAU5D5F,EAAA,qBAAKQ,UAAU,WACbR,EAAA,cAAC+G,EAAD,CAAQ5C,WAAS,EAACzD,QAASM,KAAK8G,UAAhC,SACA9H,EAAA,cAAC+G,EAAD,CAAQ7C,UAAWlD,KAAKJ,MAAMqI,gBAAiBvI,QAASM,KAAK4G,UAA7D,sBAnFkChI,cCL9C,SAASsJ,IAGP,IAFA,IAL8BC,EAAaC,EAKrCjB,EAAoB,GACtBkB,EAAI,EACDA,EAAI,GAAG,CACZ,IAAMC,GARsBH,EAQS,EARIC,EAQD,GAPnCG,KAAKC,MAAMD,KAAKD,UAAYF,EAAMD,EAAM,IAAMA,GAQ/ChB,EAAQsB,SAASH,KACrBnB,EAAQkB,KAAOC,GAEjB,OAAOnB,EAAQuB,KAAK,SAAC9E,EAAGkE,GAAJ,OAAUlE,EAAIkE,EAAI,GAAK,QAwBxBtE,cAuFnB,SAAAA,EAAa5D,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACzB3D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,KAAAH,KAAMJ,KAtFA+I,YAAc,SAACC,GACrB/I,EAAKO,SAAS,CACZwI,QACAC,iBAAiB,KAkFMhJ,EA9EnBiJ,gBAAkB,WAExB,IADA,IAAM3B,EAAsB,GACnBkB,EAAI,EAAGA,EAAIxI,EAAKS,MAAMsI,MAAOP,IACpClB,EAAQ5H,KAAK2I,KAEfrI,EAAKO,SAAS,CACZ+G,UACAT,OAAQ,MAuEe7G,EAnEnBkJ,YAmEmBjJ,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KAnEL,SAAAC,IAAA,OAAAH,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpBtE,EAAKO,SAAS,CACZ4I,eAAe,IAFG,wBAAA/E,EAAAI,SAAAP,MAmEKjE,EA7DnBoJ,aAAe,WACrBpJ,EAAKO,SAAS,CACZ4I,eAAe,KA2DQnJ,EAvDnBqJ,gBAAkB,WACxBrJ,EAAKO,SAAS,CACZyI,iBAAkBhJ,EAAKS,MAAMuI,mBAqDNhJ,EApCnBsJ,YAoCmB,eAAAC,EAAAtJ,OAAA4D,EAAA,EAAA5D,CAAA6D,EAAAC,EAAAC,KApCL,SAAAkB,EAAO8B,GAAP,IAAAxF,EAAAgI,EAAAhB,EAAAiB,EAAAjH,EAAA,OAAAsB,EAAAC,EAAAI,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WAChBtE,EAAKS,MAAM2H,gBADK,CAAAjD,EAAAb,KAAA,eAAAa,EAAAE,OAAA,iBAMpB,IAJArF,EAAKO,SAAS,CAAE6H,iBAAiB,IACjClG,QAAQC,IAAI6E,GAENxF,EAAgB,GALFgI,EAAA,SAMXhB,GACP,IAAMkB,EAAY1C,EAAMwB,GAGlBmB,EAAU3J,EAAKS,MAAM6G,QAAQkB,GAAGoB,OAAO,SAACnC,EAAGoC,GAC/C,OAA+D,MAAxD7J,EAAKS,MAAMoG,OAAO/D,KAAK,SAAAgH,GAAA,IAAAC,EAAA9J,OAAA+H,EAAA,EAAA/H,CAAA6J,EAAA,GAAE/F,EAAFgG,EAAA,GAAK9B,EAAL8B,EAAA,UAAYhG,GAAKyE,GAAKP,GAAK4B,MAI3DrI,EAAMgH,GAAK,CACTkB,YACAM,UATgB,GAUhBC,OAAQjK,EAAKS,MAAM6G,QAAQkB,GAC3BmB,UACAO,MAAM,IAAIC,MAAOC,aAdZ5B,EAAI,EAAGA,EAAIxB,EAAM9D,OAAQsF,IAAKgB,EAA9BhB,GANWiB,EAAA,cAAAA,EAwBDjI,EAxBC0B,QAAA,CAAAiC,EAAAb,KAAA,gBAwBT9B,EAAQhB,EAxBCiI,GAAAtE,EAAAb,KAAA,GAyBZtE,EAAKD,MAAMuF,SAAS+E,SAAS7H,GAzBjB,QAAAiH,IAAAtE,EAAAb,KAAA,gBA4BpBtE,EAAKO,SAAS,CAAE6H,iBAAiB,EAAOe,eAAe,IA5BnC,yBAAAhE,EAAAX,SAAAU,MAoCK,gBAAAT,GAAA,OAAA8E,EAAA7E,MAAAvE,KAAAwE,YAAA,GAAA3E,EALnBsK,OAAS,WACf7H,aAAa8H,QACbC,SAASC,UAKTzK,EAAKS,MAAQ,CACXuB,SAAUS,aAAaC,QAAQ,YAC/BqG,MAAO,EACPzB,QAAS,CACP,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAClB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAEvBT,OAAQ,GACRsC,eAAe,EACff,iBAAiB,EACjBY,iBAAiB,EACjB0B,2BAA2B,GAfJ1K,gFAjDD2K,EAAkB9C,GAC1C,IAAMV,EAAQhH,KAAKM,MAAMoG,OAAO+D,UAAU,SAAAxL,GAAA,IAAA2I,EAAA9H,OAAA+H,EAAA,EAAA/H,CAAAb,EAAA,GAAE2E,EAAFgE,EAAA,GAAKE,EAALF,EAAA,UAAYhE,GAAK4G,GAAY1C,GAAKJ,IACpEhB,EAAW1G,KAAKM,MAAhBoG,OACR,IAAc,GAAVM,EAAa,CACf,IAAM0D,EAAO,CAACF,EAAU9C,GAClBiD,EAAS,GAAA9H,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAO4G,GAAP,CAAegE,IAC9B1K,KAAKI,SAAS,CAAEsG,OAAQiE,QACnB,CACL,IAAMA,EAAS,GAAA9H,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAO4G,EAAOQ,MAAM,EAAGF,IAAvBlH,OAAAgD,EAAA,EAAAhD,CAAkC4G,EAAOQ,MAAMF,EAAQ,KACtEhH,KAAKI,SAAS,CAAEsG,OAAQiE,uDA2DlB,IAAA/E,EAAA5F,KACR,OACEhB,EAAA,cAACH,EAAD,KAEI,SAACiH,GAAD,OACE9G,EAAA,cAAAA,EAAA,cACEA,EAAA,qBAAKQ,UAAU,aAEbR,EAAA,qBAAKQ,UAAU,QACbR,EAAA,0BAAO4G,EAAKtF,MAAMuB,UAClB7C,EAAA,wBAAQU,QAASkG,EAAKuE,QAAtB,YAGFnL,EAAA,qBAAKQ,UAAU,SACbR,EAAA,qBAAKQ,UAAU,eAEXoG,EAAKtF,MAAM6G,QAAQnB,IAAI,SAAC4E,EAAKJ,GAC3B,OACExL,EAAA,qBAAKQ,UAAU,MAAM0G,IAAKsE,GAEtBI,EAAI5E,IAAI,SAACS,EAAQiB,GACf,IAAMhB,EAASd,EAAKtF,MAAMoG,OAAO+D,UAAU,SAAAI,GAAA,IAAAC,EAAAhL,OAAA+H,EAAA,EAAA/H,CAAA+K,EAAA,GAAEjH,EAAFkH,EAAA,GAAKhD,EAALgD,EAAA,UAAYlH,GAAK4G,GAAY1C,GAAKJ,KAAgB,EAC7F,OACE1I,EAAA,cAAC+L,EAAD,CAAMrL,QAAS,kBAAMkG,EAAKoF,iBAAiBR,EAAU9C,IAC/CjB,OAAQA,EACRP,IAAKO,EACLC,OAAQA,WAYhC1H,EAAA,qBAAKQ,UAAU,iBACbR,EAAA,qBAAKqE,MAAO,CAAE4H,KAAM,GAAKzL,UAAU,oBACjCR,EAAA,cAAC+G,EAAD,CAAQrG,QAASkG,EAAKkD,iBAAtB,qBAEF9J,EAAA,qBAAKqE,MAAO,CAAE4H,KAAM,GAAKzL,UAAU,iBACjCR,EAAA,cAAC+G,EAAD,CACErG,QAASkG,EAAKsD,gBACd/F,UAAWyC,EAAKtF,MAAMuI,iBAErBjD,EAAKtF,MAAMuI,gBAAkB,SAAMjD,EAAKtF,MAAMsI,OAGjD5J,EAAA,qBAAKQ,UAAU,UAAU0L,QAAStF,EAAKtF,MAAMuI,iBAEzCzB,MAAMC,KAAK,CAAEtE,OAAQ,IAAKiD,IAAI,SAACsB,EAAGe,GAChC,OACErJ,EAAA,cAAC+G,EAAD,CACEG,IAAKmC,EAAI,EACTlF,UAAWyC,EAAKtF,MAAMsI,OAASP,EAAI,EACnC3I,QAAS,kBAAMkG,EAAK+C,YAAYN,EAAI,KAEnCA,EAAI,QAUjBrJ,EAAA,qBAAKQ,UAAU,eACbR,EAAA,cAAC+G,EAAD,CAAQrG,QAASkG,EAAKmD,aAAtB,qBAIJ/J,EAAA,qBAAKQ,UAAU,QACbR,EAAA,wBAAQQ,UAAU,UAAlB,QACAR,EAAA,wBAAQU,QAASkG,EAAKhG,MAAMuL,YAA5B,gBAMFvF,EAAKtF,MAAM0I,eACXhK,EAAA,cAACoM,EAAD,CACEjE,QAASvB,EAAKtF,MAAM6G,QACpBT,OAAQd,EAAKtF,MAAMoG,OACnBE,SAAUhB,EAAKuD,YACfrC,SAAUlB,EAAKqD,aACfhB,gBAAiBrC,EAAKtF,MAAM2H,4BAlMRrJ,aC9BjByM,kMAEF,IAAAxL,EAAAG,KACf,OACEhB,EAAA,qBAAKQ,UAAU,gBAEbR,EAAA,qBAAKQ,UAAU,SAEXQ,KAAKJ,MAAMkK,OAAO9D,IAAI,SAAAsF,GACFzL,EAAKD,MAAM4J,QAAQf,SAAS6C,GAC9C,OACEtM,EAAA,sBAAMkH,IAAKoF,GAAIA,MAMvBtM,EAAA,qBAAKQ,UAAU,QACZQ,KAAKJ,MAAM2J,WAGdvK,EAAA,qBAAKQ,UAAU,QACZQ,KAAKJ,MAAMiK,mBAtBoBjL,cCQrB4E,cASnB,SAAAA,EAAa5D,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACzB3D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,KAAAH,KAAMJ,KARA2L,YAAsB,EAOH1L,EALnB2L,4BAAsC,EAKnB3L,EAHnBsB,MAAgB,GAGGtB,EAFnBwB,MAAgB,GAKtBxB,EAAKS,MAAQ,CACXmL,YAAa,GACbC,WAAY,IAGd7L,EAAKD,MAAMuF,SAAShE,QAAQO,GAAG,QAAS,SAAAiE,GAC5B,MAANA,IACJ9F,EAAKsB,MAAQwE,EAAG/D,OAAS,GACzBG,QAAQC,IAAI,aAAcnC,EAAKsB,OAC/BtB,EAAK8L,aAGP9L,EAAKD,MAAMuF,SAAS9D,QAAQK,GAAG,QAAS,SAAAiE,GAC5B,MAANA,IACJ9F,EAAKwB,MAAQsE,EAAG/D,OAAS,GACzBG,QAAQC,IAAI,aAAcnC,EAAKwB,OAC/BxB,EAAK8L,aAnBkB9L,mFAwBzBG,KAAKuL,YAAa,EACdvL,KAAKwL,4BAA4BxL,KAAK2L,yDAI1C3L,KAAKuL,YAAa,oCAIlB,IAAKvL,KAAKuL,WAGR,OAFAxJ,QAAQC,IAAI,oBACZhC,KAAKwL,4BAA6B,GAIpCzJ,QAAQC,IAAI,aAPK,IASTb,EAAiBnB,KAAjBmB,MAAOE,EAAUrB,KAAVqB,MAETQ,EAAWS,aAAaC,QAAQ,aAAe,UAG/CL,EAFSf,EAAMwB,KAAK,SAAAC,GAAC,OAAIA,EAAEf,UAAYA,IAEtBK,SAAW,GAE5B0J,EAAUvK,EAAMoI,OAAO,SAACpH,EAAM2E,GAClC,OAAO9E,EAAQuG,SAASzB,KAGpByE,EAA4BtK,EAAM6E,IAAI,SAAAtD,GAC1C,IAAMmJ,EAAWxK,EAAMoI,OAAO,SAACpH,EAAM2E,GACnC,OAAQtE,EAAKR,SAAW,IAAIuG,SAASzB,KAGnC8E,EAAoB,EACpBC,EAAoB,EAN0BC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAOlD,QAAAC,EAAAC,EAAmBR,EAAnBS,OAAAC,cAAAP,GAAAI,EAAAC,EAAAlI,QAAAqI,MAAAR,GAAA,EAA6B,KAAlB3J,EAAkB+J,EAAA7L,MAC3BuL,GAAazJ,EAAKkH,UAClBwC,GAAa1J,EAAKwH,WAT8B,MAAA4C,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAK,EAAAK,QAAAL,EAAAK,SAAA,WAAAT,EAAA,MAAAC,GAYlD,MAAO,CACLrK,SAAUa,EAAKb,SACfiK,YACAC,eAIJ/L,KAAKI,SAAS,CACZqL,cACAC,WAAYE,qCAIN,IAAAhG,EAAA5F,KACR,OACEhB,EAAA,cAACH,EAAD,KAEI,SAACiH,GAAD,OACE9G,EAAA,cAAAA,EAAA,cAEEA,EAAA,qBAAKQ,UAAU,cAEbR,EAAA,qBAAKQ,UAAU,iBAEbR,EAAA,qBAAKQ,UAAU,UAEbR,EAAA,2BACEA,EAAA,2BAEE4G,EAAKtF,MAAMmL,YAAYzF,IAAI,SAAC2G,EAAM3F,GAChC,IAAM4F,EAAQD,EAAKb,UAAYa,EAAKZ,UAC9Bc,EAAkB,CAAC,SAGzB,OAFID,EAAQ,GAAGC,EAAgBtN,KAAK,YAChCqN,EAAQ,GAAGC,EAAgBtN,KAAK,YAElCP,EAAA,oBAAIkH,IAAKyG,EAAK9K,UACZ7C,EAAA,oBAAIQ,UAAU,UAAUwH,EAAQ,GAChChI,EAAA,oBAAIQ,UAAU,YAAYmN,EAAK9K,UAC/B7C,EAAA,oBAAIQ,UAAU,QAAd,KAAwBmN,EAAKb,UAA7B,KACA9M,EAAA,oBAAIQ,UAAU,QAAd,KAAwBmN,EAAKZ,UAA7B,KACA/M,EAAA,oBAAIQ,UAAWqN,EAAgBpN,KAAK,MAAOmN,SAUvD5N,EAAA,qBAAKQ,UAAU,QAIXoG,EAAKtF,MAAMoL,WAAW1F,IAAI,SAAC2G,EAAM3F,GAC/B,OACEhI,EAAA,cAAC8N,EAAD,CACE5G,IAAKyG,EAAK5C,KAAKE,WAAajD,EAC5B8C,OAAQ6C,EAAK7C,QAAU,GACvBN,QAASmD,EAAKnD,SAAW,GACzBK,UAAW8C,EAAK9C,WAAa,EAC7BN,UAAWoD,EAAKpD,WAAa,QAUzCvK,EAAA,qBAAKQ,UAAU,QACbR,EAAA,wBAAQU,QAASkG,EAAKhG,MAAMmN,WAA5B,QACA/N,EAAA,wBAAQQ,UAAU,UAAlB,0BAlJoBZ,aCTjBoO,cAInB,SAAAA,EAAapN,GAAW,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgN,IACtBnN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkN,GAAA7M,KAAAH,KAAMJ,KAHAuF,SAAW,IAAIlE,EAECpB,EAehBoN,SAAW,SAACpL,GAClBE,QAAQC,IAAIH,GACZS,aAAa4K,QAAQ,WAAYrL,GACjChC,EAAKO,SAAS,CACZ+M,KAAM,UAnBctN,EAuBhBuN,YAAe,WACrBvN,EAAKO,SAAS,CAAC+M,KAAM,UAxBCtN,EA2BhBwN,aAAe,WACrBxN,EAAKO,SAAS,CAAC+M,KAAM,WAzBrB,IAAIA,EAAsB,OAEd7K,aAAaC,QAAQ,OALX,OAQN,MAFCD,aAAaC,QAAQ,cAEhB4K,EAAO,MAE7BtN,EAAKS,MAAQ,CACX6M,QAXoBtN,qHAmCtB,OACEyN,EAAA1J,EAAA2J,cAACC,EAAD,KAEsB,MAAnBxN,KAAKM,MAAM6M,MAAgBG,EAAA1J,EAAA2J,cAACE,EAAD,CAAItI,SAAUnF,KAAKmF,SAAUE,OAAQrF,KAAKiN,WAClD,QAAnBjN,KAAKM,MAAM6M,MAAkBG,EAAA1J,EAAA2J,cAACG,EAAD,CAAMvI,SAAUnF,KAAKmF,SAAUgG,WAAYnL,KAAKqN,eAC1D,SAAnBrN,KAAKM,MAAM6M,MAAmBG,EAAA1J,EAAA2J,cAACI,EAAD,CAAOxI,SAAUnF,KAAKmF,SAAU4H,UAAW/M,KAAKoN,sBA5CtDQ,aCDbC,QACW,cAA7BC,OAAOzD,SAAS0D,UAEe,UAA7BD,OAAOzD,SAAS0D,UAEhBD,OAAOzD,SAAS0D,SAASC,MACvB,2DCZNC,IAASC,OAAOZ,EAAA1J,EAAA2J,cAACY,EAAD,MAAQC,SAASC,eAAe,SDmI1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c20399bb.chunk.js","sourcesContent":["import * as React from 'react'\nimport './SnackBar.scss'\n\ninterface Props {\n\n}\n\ninterface State {\n  isOpen: boolean\n  message: string\n}\n\nexport interface Api extends State {\n  open: (message: string) => void\n  close: () => void\n}\n\nconst { Consumer, Provider } = React.createContext<Api>({} as any)\n\nclass SnackBar extends React.Component {\n  render () {\n    return (\n      <Consumer>\n        {\n          ({ open, close, message, isOpen }) => {\n            const classNames = ['SnackBar']\n            if (isOpen) classNames.push('isOpen')\n            return (\n              <div className={classNames.join(' ')} onClick={close}>\n                <p className=\"message\">{message}</p>\n              </div>\n            )\n          }\n        }\n      </Consumer>\n    )\n  }\n}\n\nclass SnackBarProvider extends React.Component<Props, State> {\n\n  constructor (props: Props) {\n    super(props)\n    this.state = {\n      message: '.',\n      isOpen: false,\n    }\n  }\n\n  private open = (message: string) => {\n    this.setState({\n      isOpen: true,\n      message,\n    })\n    setTimeout(() => {\n      this.close()\n    }, 3000)\n  }\n\n  private close = () => {\n    this.setState({\n      isOpen: false,\n    })\n  }\n\n  render () {\n    return (\n      <Provider\n        value={{\n          open: this.open,\n          close: this.close,\n          isOpen: this.state.isOpen,\n          message: this.state.message,\n        }}\n      >\n        <SnackBar/>\n        {this.props.children}\n      </Provider>\n    )\n  }\n\n}\n\nexport {\n  Consumer,\n  SnackBarProvider as Provider,\n}\n","import app from 'firebase/app'\nimport 'firebase/database'\nimport * as firebase from 'firebase'\n\n\nconst config = {\n  apiKey: \"AIzaSyCsspsFCdr8hvdnyJrkNI2ezRWqqkPfQKs\",\n  authDomain: \"loptice-9c87b.firebaseapp.com\",\n  databaseURL: \"https://loptice-9c87b.firebaseio.com\",\n  projectId: \"loptice-9c87b\",\n  storageBucket: \"loptice-9c87b.appspot.com\",\n  messagingSenderId: \"613785681705\"\n}\n\nexport interface User {\n  username: string\n  history: number[]\n}\n\nexport interface Game {\n  date: string\n  ticket: number[]\n  correct: number[]\n  moneyLost: number\n  moneyGain: number\n}\n\nexport interface Data {\n  users: User[]\n  games: Game[]\n}\n\nexport default class Firebase {\n\n  private db: firebase.database.Database\n\n  public users = () => this.db.ref('users')\n  public games = () => this.db.ref('games')\n\n  public data!: Data\n\n  constructor() {\n    app.initializeApp(config)\n    this.db = app.database()\n\n    this.db.ref('/').on('value', snapshot => {\n      if (snapshot == null) return\n      this.data = snapshot.val()\n    })\n  }\n\n  public async addNewUser (username: string) {\n    const snapshot = await this.db.ref('users/').once('value')\n    const users = snapshot.val() || []\n    console.log('users')\n\n    const newUser: User = {\n      username,\n      history: [],\n    }\n    const newUsers = [...users, newUser]\n\n    this.db.ref('users/').set(newUsers)\n  }\n\n  public async saveGame (game: Game) {\n    let username = localStorage.getItem('username')\n    if (username == null) {\n      username = 'Unknown'\n    }\n\n    const gamesSnapshot = await this.db.ref('games/').once('value')\n    const games: Game[] = gamesSnapshot.val() || []\n\n    const usersSnapshot = await this.db.ref('users/').once('value')\n    const users: User[] = usersSnapshot.val() || []\n    console.log(users)\n\n    const user = users.find(u => u.username == username)\n    user!.history = [...user!.history || [], games.length]\n\n    const newGames = [...games, game]\n    this.db.ref('games/').set(newGames)\n    this.db.ref('users/').set(users)\n  }\n\n}\n","import * as React from 'react'\nimport { CSSProperties } from 'react'\nimport './Button.scss'\n\ninterface Props {\n  disabled?: boolean\n  isLoading?: boolean\n  onClick?: () => void\n  secondary?: boolean\n  style?: CSSProperties\n}\n\nexport default class Button extends React.Component<Props> {\n\n  onClick = () => {\n    if (this.props.onClick != null) {\n      this.props.onClick()\n    }\n  }\n\n  render () {\n    const classNames = ['Button']\n    if (this.props.isLoading) classNames.push('Button-isLoading')\n    if (this.props.secondary) classNames.push('Button-secondary')\n\n    return (\n      <button\n        className={classNames.join(' ')}\n        onClick={this.onClick}\n        disabled={this.props.disabled}\n        style={this.props.style}\n      >\n        <span className=\"Button-content\">\n          {this.props.children}\n        </span>\n        <span className=\"Button-spinner\">\n          <img src=\"./loading.png\" alt=\"\"/>\n        </span>\n      </button>\n    )\n  }\n}\n","import * as React from 'react'\nimport './Identification.scss'\nimport Button from '../ui/Button'\nimport * as SnackBar from '../ui/SnackBar'\nimport * as firebase from '../firebase'\nimport Firebase from '../firebase'\n\ninterface Props {\n  firebase: Firebase\n  onDone: (username: string) => void\n}\n\ninterface State {\n  isListOfUsersVisible: boolean\n  isListOfUsersLoading: boolean\n\n  isAddNewUserVisible: boolean\n  isAddingNewUserLoading: boolean\n\n  chosenUsername: string | null\n  username: string\n\n  users: firebase.User[]\n}\n\nexport default class EnterKey extends React.Component<Props, State> {\n\n  constructor (props: Props) {\n    super(props)\n    this.state = {\n      isListOfUsersVisible: false,\n      isAddNewUserVisible: false,\n      isListOfUsersLoading: false,\n      isAddingNewUserLoading: false,\n      chosenUsername: null,\n      username: '',\n      users: [],\n    }\n\n    this.props.firebase.users().on('value', ss => {\n      if (ss == null) return\n      const users = ss.val() || []\n      this.setState({ users })\n    })\n  }\n\n  private onExistingUserClick = async (snackbar: SnackBar.Api) => {\n    this.setState({\n      isListOfUsersVisible: true,\n    })\n  }\n\n  private onNewUserClick = () => {\n    this.setState({\n      isAddNewUserVisible: true,\n    })\n  }\n\n  private onUsernameChange = (event: React.SyntheticEvent) => {\n    const target = event.target as HTMLInputElement\n    const value = target.value\n    this.setState({\n      username: value,\n    })\n  }\n\n  private onAddNewUser = async () => {\n    if (this.state.isAddingNewUserLoading) return\n    this.setState({\n      isAddingNewUserLoading: true,\n    })\n    await this.props.firebase.addNewUser(this.state.username)\n    this.setState({\n      isAddingNewUserLoading: false,\n    })\n    this.props.onDone(this.state.username)\n  }\n\n  private goBackToMainScreen = () => {\n    if (this.state.isAddingNewUserLoading) return\n    this.setState({\n      isAddNewUserVisible: false,\n      isListOfUsersVisible: false,\n    })\n  }\n\n  private onUserPick = (username: string) => {\n    this.setState({\n      chosenUsername: username,\n    })\n  }\n\n  private onUserAccept = () => {\n    this.props.onDone(this.state.chosenUsername!)\n  }\n\n  render () {\n    const isMainMenuVisible = !this.state.isListOfUsersVisible && !this.state.isAddNewUserVisible\n\n    return (\n      <SnackBar.Consumer>\n        {\n          (ctx) => (\n            <div className=\"page Identification\">\n\n              {\n                isMainMenuVisible &&\n                <div className=\"subpage Main\">\n                  <p>Imaš nalog?</p>\n\n                  <Button\n                    isLoading={this.state.isListOfUsersLoading}\n                    onClick={() => this.onExistingUserClick(ctx)}\n                  >\n                    Da, ja sam iskusan kockar\n                  </Button>\n\n                  <Button onClick={this.onNewUserClick}>Ne, ja sam (još uvek) pičkica</Button>\n                </div>\n              }\n\n              {\n                this.state.isListOfUsersVisible &&\n                <div className=\"subpage ListOfUsers\">\n                  <p>Nađi se.</p>\n\n                  {\n                    this.state.users.map(({ username }) => {\n                      const classNames = ['radio']\n                      if (username == this.state.chosenUsername) classNames.push('selected')\n                      return (\n                        <label className={classNames.join(' ')} key={username}>\n                          <input name=\"user\" type=\"radio\" onChange={() => this.onUserPick(username)}/>\n                          <span>{ username }</span>\n                        </label>\n                      )\n                    })\n                  }\n\n                  <div className=\"buttons\">\n                    <Button\n                      onClick={this.goBackToMainScreen}\n                    >\n                      Nazad\n                    </Button>\n                    <Button\n                      disabled={this.state.chosenUsername == null}\n                      isLoading={false}\n                      onClick={this.onUserAccept}\n                    >\n                      Dalje\n                    </Button>\n                  </div>\n\n                </div>\n              }\n\n              {\n                this.state.isAddNewUserVisible &&\n                <div className=\"subpage AddNewUser\">\n                  <p>Unesi ime.</p>\n\n                  <input type=\"text\" onChange={this.onUsernameChange} value={this.state.username}/>\n\n                  <div className=\"buttons\">\n                    <Button onClick={this.goBackToMainScreen}>Nazad</Button>\n                    <Button\n                      onClick={this.onAddNewUser}\n                      disabled={this.state.username.length == 0}\n                      isLoading={this.state.isAddingNewUserLoading}\n                    >\n                      Dalje\n                    </Button>\n                  </div>\n                </div>\n              }\n\n            </div>\n          )\n        }\n      </SnackBar.Consumer>\n    )\n  }\n}\n","import * as React from 'react'\nimport './Ball.scss'\n\ninterface Props {\n  isLocked?: boolean\n  number: number\n  marked?: boolean\n  onClick?: () => void\n}\n\nconst modulos = [\n  'red',\n  'green',\n  'blue',\n  'purple',\n  'brown',\n  'yellow',\n  'orange',\n  'gray',\n]\n\nexport default class Ball extends React.Component<Props> {\n\n  private onClick = () => {\n    if (this.props.onClick == null) return\n    this.props.onClick()\n  }\n\n  render () {\n    const modulo = this.props.number % 8\n    const color = modulos[modulo]\n\n    const classNames = ['Ball', color]\n    if (this.props.marked) classNames.push('marked')\n\n    return (\n      <div className={classNames.join(' ')}\n           onClick={this.onClick}\n      >\n        { this.props.number }\n      </div>\n    )\n  }\n\n}\n\n","import * as React from 'react'\nimport { FormEvent } from 'react'\nimport './MoneyInputDialog.scss'\nimport Button from '../ui/Button'\n\ninterface Props {\n  numbers: number[][]\n  marked: [number, number][]\n  onAccept?: (money: number[]) => void\n  onCancel?: () => void\n  isAcceptLoading: boolean\n}\n\ninterface State {\n  money: number[]\n}\n\nexport default class MoneyInputDialog extends React.Component<Props, State> {\n\n  public constructor (props: Props) {\n    super(props)\n    const length = props.numbers.length\n    this.state = {\n      money: Array.from({ length }).map(_ => 0),\n    }\n  }\n\n  private onAccept = () => {\n    if (this.props.onAccept == null) return\n    this.props.onAccept(this.state.money)\n  }\n\n  private onCancel = () => {\n    if (this.props.onCancel == null) return\n    this.props.onCancel()\n  }\n\n  private setMoney = (index: number, event: FormEvent<HTMLInputElement>) => {\n    const target = event.target as HTMLInputElement\n    const value = target.valueAsNumber\n    const money = [\n      ...this.state.money.slice(0, index),\n      value,\n      ...this.state.money.slice(index + 1),\n    ]\n    this.setState({ money })\n  }\n\n  public render () {\n    return (\n      <div className=\"dialog-wrapper\">\n        <div className=\"dialog MoneyInputDialog\">\n\n          <table>\n            <tbody>\n            <tr>\n              <td colSpan={6}>Kombinacija</td>\n              <td>Out</td>\n              <td>In</td>\n            </tr>\n            {\n              this.props.numbers.map((numbers, numbersIndex) => {\n                let areAllMarked = true\n\n                return (\n                  <tr key={numbersIndex}>\n                    {\n                      numbers.map((number, numberIndex) => {\n                        const isMarked = this.props.marked.find(([a, b]) => {\n                          return a == numbersIndex && b == numberIndex\n                        }) != null\n                        if (!isMarked) areAllMarked = false\n                        const classNames = []\n                        if (isMarked) classNames.push('marked')\n                        return (\n                          <td key={numberIndex} className={classNames.join(' ')}>\n                            {number}\n                          </td>\n                        )\n                      })\n                    }\n                    <td>\n                      <input type=\"number\" defaultValue={'20'}/>\n                    </td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        defaultValue={areAllMarked ? '' : '0'}\n                        onInput={event => this.setMoney(numbersIndex, event)}\n                      />\n                    </td>\n                  </tr>\n                )\n              })\n            }\n            </tbody>\n          </table>\n\n          <div className=\"buttons\">\n            <Button secondary onClick={this.onCancel}>Nazad</Button>\n            <Button isLoading={this.props.isAcceptLoading} onClick={this.onAccept}>Prihvati</Button>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n\n}\n","import * as React from 'react'\nimport './Play.scss'\nimport * as SnackBar from '../ui/SnackBar'\nimport Button from '../ui/Button'\nimport Ball from '../ui/Ball'\nimport MoneyInputDialog from './MoneyInputDialog'\nimport Firebase, { Game } from '../firebase'\n\nfunction getRandomIntInclusive (min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nfunction getSixNumbers () {\n  const numbers: number[] = []\n  let i = 0\n  while (i < 6) {\n    const random = getRandomIntInclusive(1, 48)\n    if (numbers.includes(random)) continue\n    numbers[i++] = random\n  }\n  return numbers.sort((a, b) => a > b ? 1 : -1)\n}\n\ninterface Props {\n  firebase: Firebase\n  onStatsTab: () => void\n}\n\ninterface State {\n  username: string\n\n  count: number\n\n  numbers: number[][]\n  marked: [number, number][]\n\n  isSubmenuOpen: boolean\n  isAcceptLoading: boolean\n\n  isCountMenuOpen: boolean\n\n  isNewCombinationsDisabled: boolean\n}\n\nexport default class EnterKey extends React.Component<Props, State> {\n\n  private changeCount = (count: number) => {\n    this.setState({\n      count,\n      isCountMenuOpen: false,\n    })\n  }\n\n  private generateNumbers = () => {\n    const numbers: number[][] = []\n    for (let i = 0; i < this.state.count; i++) {\n      numbers.push(getSixNumbers())\n    }\n    this.setState({\n      numbers,\n      marked: [],\n    })\n  }\n\n  private openSubmenu = async () => {\n    this.setState({\n      isSubmenuOpen: true,\n    })\n  }\n\n  private closeSubmenu = () => {\n    this.setState({\n      isSubmenuOpen: false,\n    })\n  }\n\n  private toggleCountMenu = () => {\n    this.setState({\n      isCountMenuOpen: !this.state.isCountMenuOpen,\n    })\n  }\n\n  private toggleNumberMark (rowIndex: number, numberIndex: number): void {\n    const index = this.state.marked.findIndex(([a, b]) => a == rowIndex && b == numberIndex)\n    const { marked } = this.state\n    if (index == -1) {\n      const pair = [rowIndex, numberIndex] as [number, number]\n      const newMarked = [...marked, pair]\n      this.setState({ marked: newMarked })\n    } else {\n      const newMarked = [...marked.slice(0, index), ...marked.slice(index + 1)]\n      this.setState({ marked: newMarked })\n    }\n  }\n\n  private acceptMoney = async (money: number[]) => {\n    if (this.state.isAcceptLoading) return\n    this.setState({ isAcceptLoading: true })\n    console.log(money)\n\n    const games: Game[] = []\n    for (let i = 0; i < money.length; i++) {\n      const moneyGain = money[i]\n      const moneyLost = 20\n\n      const correct = this.state.numbers[i].filter((_, j) => {\n        return this.state.marked.find(([a, b]) => a == i && b == j) != null\n      })\n\n\n      games[i] = {\n        moneyGain,\n        moneyLost,\n        ticket: this.state.numbers[i],\n        correct,\n        date: new Date().toString(),\n      }\n    }\n\n    for (const game of games) {\n      await this.props.firebase.saveGame(game)\n    }\n\n    this.setState({ isAcceptLoading: false, isSubmenuOpen: false })\n  }\n\n  private logOut = () => {\n    localStorage.clear()\n    location.reload()\n  }\n\n  constructor (props: Props) {\n    super(props)\n    this.state = {\n      username: localStorage.getItem('username')!,\n      count: 4,\n      numbers: [\n        [3, 7, 13, 21, 32, 42],\n        [1, 2, 3, 4, 5, 6],\n        [7, 8, 9, 10, 11, 12],\n        [13, 14, 15, 16, 17, 18],\n      ],\n      marked: [],\n      isSubmenuOpen: false,\n      isAcceptLoading: false,\n      isCountMenuOpen: false,\n      isNewCombinationsDisabled: false,\n    }\n  }\n\n  render () {\n    return (\n      <SnackBar.Consumer>\n        {\n          (ctx) => (\n            <>\n              <div className=\"page Play\">\n\n                <div className=\"name\">\n                  <span>{this.state.username}</span>\n                  <button onClick={this.logOut}>Log out</button>\n                </div>\n\n                <div className=\"balls\">\n                  <div className=\"balls-inner\">\n                    {\n                      this.state.numbers.map((row, rowIndex) => {\n                        return (\n                          <div className=\"row\" key={rowIndex}>\n                            {\n                              row.map((number, numberIndex) => {\n                                const marked = this.state.marked.findIndex(([a, b]) => a == rowIndex && b == numberIndex) > -1\n                                return (\n                                  <Ball onClick={() => this.toggleNumberMark(rowIndex, numberIndex)}\n                                        number={number}\n                                        key={number}\n                                        marked={marked}\n                                  />\n                                )\n                              })\n                            }\n                          </div>\n                        )\n                      })\n                    }\n                  </div>\n                </div>\n\n                <div className=\"again buttons\">\n                  <div style={{ flex: 5 }} className=\"generate-wrapper\">\n                    <Button onClick={this.generateNumbers}>Nove kombinacije</Button>\n                  </div>\n                  <div style={{ flex: 1 }} className=\"count-wrapper\">\n                    <Button\n                      onClick={this.toggleCountMenu}\n                      secondary={this.state.isCountMenuOpen}\n                    >\n                      {this.state.isCountMenuOpen ? '▼' : this.state.count}\n                    </Button>\n\n                    <div className=\"submenu\" hidden={!this.state.isCountMenuOpen}>\n                      {\n                        Array.from({ length: 6 }).map((_, i) => {\n                          return (\n                            <Button\n                              key={i + 1}\n                              secondary={this.state.count != i + 1}\n                              onClick={() => this.changeCount(i + 1)}\n                            >\n                              {i + 1}\n                            </Button>\n                          )\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                {\n                  <div className=\"save-closed\">\n                    <Button onClick={this.openSubmenu}>Završi kolo</Button>\n                  </div>\n                }\n\n                <div className=\"tabs\">\n                  <button className=\"active\">Igra</button>\n                  <button onClick={this.props.onStatsTab}>Statistika</button>\n                </div>\n\n              </div>\n\n              {\n                this.state.isSubmenuOpen &&\n                <MoneyInputDialog\n                  numbers={this.state.numbers}\n                  marked={this.state.marked}\n                  onAccept={this.acceptMoney}\n                  onCancel={this.closeSubmenu}\n                  isAcceptLoading={this.state.isAcceptLoading}\n                />\n              }\n\n            </>\n          )\n        }\n      </SnackBar.Consumer>\n    )\n  }\n}\n","import * as React from 'react'\nimport './LocalStatRow.scss'\n\ninterface Props {\n  ticket: number[]\n  correct: number[]\n  moneyLost: number\n  moneyGain: number\n}\n\ninterface State {\n\n}\n\nexport default class LocalStatRow extends React.Component<Props, State> {\n\n  public render () {\n    return (\n      <div className=\"LocalStatRow\">\n\n        <div className=\"balls\">\n          {\n            this.props.ticket.map(n => {\n              const isCorrect = this.props.correct.includes(n)\n              return (\n                <span key={n}>{n}</span>\n              )\n            })\n          }\n        </div>\n\n        <div className=\"gain\">\n          {this.props.moneyGain}\n        </div>\n\n        <div className=\"loss\">\n          {this.props.moneyLost}\n        </div>\n\n      </div>\n    )\n  }\n\n}\n","import * as React from 'react'\nimport './Stats.scss'\nimport * as SnackBar from '../ui/SnackBar'\nimport Firebase, { Game, User } from '../firebase'\nimport LocalStatRow from './LocalStatRow'\n\ninterface Props {\n  firebase: Firebase\n  onPlayTab: () => void\n}\n\ninterface GlobalStat {\n  username: string\n  totalGain: number\n  totalLoss: number\n}\n\ninterface State {\n  globalStats: GlobalStat[]\n  localStats: Game[]\n}\n\nexport default class EnterKey extends React.Component<Props, State> {\n\n  private _isMounted: boolean = false\n\n  private shouldSetStateAfterMounted: boolean = false\n\n  private users: User[] = []\n  private games: Game[] = []\n\n  constructor (props: Props) {\n    super(props)\n\n    this.state = {\n      globalStats: [],\n      localStats: [],\n    }\n\n    this.props.firebase.users().on('value', ss => {\n      if (ss == null) return\n      this.users = ss.val() || []\n      console.log('this.users', this.users)\n      this.compute()\n    })\n\n    this.props.firebase.games().on('value', ss => {\n      if (ss == null) return\n      this.games = ss.val() || []\n      console.log('this.games', this.games)\n      this.compute()\n    })\n  }\n\n  public componentDidMount (): void {\n    this._isMounted = true\n    if (this.shouldSetStateAfterMounted) this.compute()\n  }\n\n  public componentWillUnmount (): void {\n    this._isMounted = false\n  }\n\n  private compute () {\n    if (!this._isMounted) {\n      console.log('not mounted')\n      this.shouldSetStateAfterMounted = true\n      return\n    }\n\n    console.log('computing')\n\n    const { users, games } = this\n\n    const username = localStorage.getItem('username') || 'Unknown'\n    const myUser = users.find(u => u.username == username)!\n\n    const history = myUser.history || []\n\n    const myGames = games.filter((game, index) => {\n      return history.includes(index)\n    })\n\n    const globalStats: GlobalStat[] = users.map(user => {\n      const hisGames = games.filter((game, index) => {\n        return (user.history || []).includes(index)\n      })\n\n      let totalGain: number = 0\n      let totalLoss: number = 0\n      for (const game of hisGames) {\n        totalGain += game.moneyGain\n        totalLoss += game.moneyLost\n      }\n\n      return {\n        username: user.username,\n        totalGain,\n        totalLoss,\n      }\n    })\n\n    this.setState({\n      globalStats,\n      localStats: myGames,\n    })\n  }\n\n  render () {\n    return (\n      <SnackBar.Consumer>\n        {\n          (ctx) => (\n            <>\n\n              <div className=\"page Stats\">\n\n                <div className=\"stats-wrapper\">\n\n                  <div className=\"global\">\n\n                    <table>\n                      <tbody>\n                      {\n                        this.state.globalStats.map((stat, index) => {\n                          const total = stat.totalGain - stat.totalLoss\n                          const totalClassNames = ['total']\n                          if (total > 0) totalClassNames.push('positive')\n                          if (total < 0) totalClassNames.push('negative')\n                          return (\n                            <tr key={stat.username}>\n                              <td className=\"number\">{index + 1}</td>\n                              <td className=\"username\">{stat.username}</td>\n                              <td className=\"gain\"> +{stat.totalGain} </td>\n                              <td className=\"loss\"> -{stat.totalLoss} </td>\n                              <td className={totalClassNames.join(' ')}>{total}</td>\n                            </tr>\n                          )\n                        })\n                      }\n                      </tbody>\n                    </table>\n\n                  </div>\n\n                  <div className=\"self\">\n\n\n                    {\n                      this.state.localStats.map((stat, index) => {\n                        return (\n                          <LocalStatRow\n                            key={stat.date.toString() + index}\n                            ticket={stat.ticket || []}\n                            correct={stat.correct || []}\n                            moneyLost={stat.moneyLost || 0}\n                            moneyGain={stat.moneyGain || 0}\n                          />\n                        )\n                      })\n                    }\n\n                  </div>\n\n                </div>\n\n                <div className=\"tabs\">\n                  <button onClick={this.props.onPlayTab}>Igra</button>\n                  <button className=\"active\">Statistika</button>\n                </div>\n\n              </div>\n\n            </>\n          )\n        }\n      </SnackBar.Consumer>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.scss'\nimport * as SnackBar from './ui/SnackBar'\nimport './firebase'\nimport Id from './pages/Identification'\nimport Play from './pages/Play'\nimport Stats from './pages/Stats'\nimport Firebase from './firebase'\n\ninterface State {\n  page: 'key' | 'id' | 'play' | 'stats'\n}\n\nexport default class App extends Component<{}, State> {\n\n  private firebase = new Firebase()\n\n  constructor (props: {}) {\n    super(props)\n\n    let page: State['page'] = 'play'\n\n    const key = localStorage.getItem('key')\n    const username = localStorage.getItem('username')\n\n    if (username == null) page = 'id'\n\n    this.state = {\n      page,\n    }\n  }\n\n  private onIdDone = (username: string) => {\n    console.log(username)\n    localStorage.setItem('username', username)\n    this.setState({\n      page: 'play',\n    })\n  }\n\n  private goToPlayTab  = () => {\n    this.setState({page: 'play'})\n  }\n\n  private goToStatsTab = () => {\n    this.setState({page: 'stats'})\n  }\n\n  componentDidMount (): void {\n  }\n\n  render () {\n    return (\n      <SnackBar.Provider>\n        {/*{this.state.page == 'key' && <Key/>}*/}\n        {this.state.page == 'id' && <Id firebase={this.firebase} onDone={this.onIdDone}/>}\n        {this.state.page == 'play' && <Play firebase={this.firebase} onStatsTab={this.goToStatsTab}/>}\n        {this.state.page == 'stats' && <Stats firebase={this.firebase} onPlayTab={this.goToPlayTab}/>}\n      </SnackBar.Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}